{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import seaborn as sb\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LinearRegression\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn import metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "df=pd.read_csv('C:\\\\RG  11.05.2019\\\\ML\\\\Graduate Admission dataset\\\\Admission_Predict_Ver1.1.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CGPA</th>\n",
       "      <th>CoA</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>9.65</td>\n",
       "      <td>0.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>8.87</td>\n",
       "      <td>0.76</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8.00</td>\n",
       "      <td>0.72</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8.67</td>\n",
       "      <td>0.80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8.21</td>\n",
       "      <td>0.65</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   CGPA   CoA\n",
       "0  9.65  0.92\n",
       "1  8.87  0.76\n",
       "2  8.00  0.72\n",
       "3  8.67  0.80\n",
       "4  8.21  0.65"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head() #CoA is chances of Admission"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CGPA</th>\n",
       "      <th>CoA</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>500.000000</td>\n",
       "      <td>500.00000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>8.576440</td>\n",
       "      <td>0.72174</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.604813</td>\n",
       "      <td>0.14114</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>6.800000</td>\n",
       "      <td>0.34000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>8.127500</td>\n",
       "      <td>0.63000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>8.560000</td>\n",
       "      <td>0.72000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>9.040000</td>\n",
       "      <td>0.82000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>9.920000</td>\n",
       "      <td>0.97000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             CGPA        CoA\n",
       "count  500.000000  500.00000\n",
       "mean     8.576440    0.72174\n",
       "std      0.604813    0.14114\n",
       "min      6.800000    0.34000\n",
       "25%      8.127500    0.63000\n",
       "50%      8.560000    0.72000\n",
       "75%      9.040000    0.82000\n",
       "max      9.920000    0.97000"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x22630dcdfc8>"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.heatmap(df.corr(), annot=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "Need to specify at least one of 'labels', 'index' or 'columns'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-28-62b65cbffb38>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mdf\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\core\\frame.py\u001b[0m in \u001b[0;36mdrop\u001b[1;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[0;32m   3995\u001b[0m             \u001b[0mlevel\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3996\u001b[0m             \u001b[0minplace\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0minplace\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 3997\u001b[1;33m             \u001b[0merrors\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   3998\u001b[0m         )\n\u001b[0;32m   3999\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\anaconda3\\lib\\site-packages\\pandas\\core\\generic.py\u001b[0m in \u001b[0;36mdrop\u001b[1;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[0;32m   3927\u001b[0m         \u001b[1;32melse\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   3928\u001b[0m             raise ValueError(\n\u001b[1;32m-> 3929\u001b[1;33m                 \u001b[1;34m\"Need to specify at least one of 'labels', 'index' or 'columns'\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   3930\u001b[0m             )\n\u001b[0;32m   3931\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mValueError\u001b[0m: Need to specify at least one of 'labels', 'index' or 'columns'"
     ]
    }
   ],
   "source": [
    "df.drop()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x22630f13d88>"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.plot(x='CGPA', y='CoA', kind='scatter')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x2263105e908>"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.tight_layout()\n",
    "sb.distplot(df['CoA'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x22630fe49c8>"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.tight_layout()\n",
    "sb.distplot(df['CGPA'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "X=df['CGPA'].values.reshape(-1, 1)\n",
    "Y=df['CoA'].values.reshape(-1, 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": [
    "x_test, x_train, y_test, y_train= train_test_split(X, Y, test_size=0.3, random_state=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False)"
      ]
     },
     "execution_count": 48,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "regressor=LinearRegression()\n",
    "regressor.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred=regressor.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.20341697]])"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "regressor.coef_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "#This means for a unit change in CGPA, change in Chances of Admission is 0.20 (approx)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[-1.59865531e-02]\n",
      " [ 4.02547804e-02]\n",
      " [-5.60025651e-02]\n",
      " [ 3.21181016e-02]\n",
      " [ 1.10596477e-01]\n",
      " [-2.75081773e-02]\n",
      " [ 1.75535071e-01]\n",
      " [-5.29753287e-02]\n",
      " [ 2.12958833e-02]\n",
      " [ 3.80497622e-02]\n",
      " [ 4.70406834e-02]\n",
      " [ 3.46887739e-03]\n",
      " [ 2.29758247e-01]\n",
      " [ 1.36557379e-02]\n",
      " [-6.55060317e-02]\n",
      " [-4.75081773e-02]\n",
      " [ 1.65281380e-02]\n",
      " [ 4.89040046e-02]\n",
      " [-2.10799833e-02]\n",
      " [-1.43261044e-02]\n",
      " [-5.58637407e-02]\n",
      " [ 8.88799256e-03]\n",
      " [-2.95931661e-03]\n",
      " [ 2.04416409e-02]\n",
      " [ 2.77561014e-02]\n",
      " [-4.50094984e-02]\n",
      " [-5.22759227e-02]\n",
      " [ 2.70246713e-02]\n",
      " [ 4.11250348e-02]\n",
      " [ 2.83351963e-03]\n",
      " [-9.99160681e-02]\n",
      " [ 2.81750757e-03]\n",
      " [-2.26016076e-02]\n",
      " [-7.49934863e-02]\n",
      " [ 1.49074853e-01]\n",
      " [ 3.11116838e-03]\n",
      " [ 2.95873985e-02]\n",
      " [ 4.09381743e-02]\n",
      " [-4.09251469e-02]\n",
      " [ 2.19632652e-02]\n",
      " [ 3.07833379e-02]\n",
      " [-3.76950379e-02]\n",
      " [ 1.42956332e-01]\n",
      " [-4.03965894e-02]\n",
      " [-5.98655307e-03]\n",
      " [ 2.51773622e-02]\n",
      " [-1.07998334e-03]\n",
      " [ 2.73468877e-01]\n",
      " [ 1.40099944e-01]\n",
      " [-5.16433478e-03]\n",
      " [-7.24467712e-02]\n",
      " [ 2.58447440e-02]\n",
      " [-3.17473652e-02]\n",
      " [ 1.26466591e-02]\n",
      " [ 2.22889501e-02]\n",
      " [-1.07369353e-01]\n",
      " [ 9.58739853e-03]\n",
      " [ 8.48516773e-02]\n",
      " [ 2.04851677e-01]\n",
      " [ 2.94165500e-02]\n",
      " [ 1.91068772e-02]\n",
      " [ 1.29588332e-03]\n",
      " [-8.22359535e-03]\n",
      " [ 7.21153187e-03]\n",
      " [-1.12633632e-01]\n",
      " [-2.97612317e-02]\n",
      " [-4.26336317e-02]\n",
      " [-4.49934863e-02]\n",
      " [ 6.20245305e-03]\n",
      " [ 6.80657743e-02]\n",
      " [-2.22919347e-02]\n",
      " [ 1.08904005e-01]\n",
      " [-4.99348630e-03]\n",
      " [ 1.32972344e-01]\n",
      " [-2.45129650e-02]\n",
      " [-2.10507421e-03]\n",
      " [-5.66699470e-02]\n",
      " [ 3.58607561e-02]\n",
      " [ 1.73484889e-01]\n",
      " [-7.33170256e-02]\n",
      " [-7.09045156e-05]\n",
      " [-1.53031592e-02]\n",
      " [-8.43261044e-02]\n",
      " [ 5.65281380e-02]\n",
      " [-1.12446771e-01]\n",
      " [-7.72706196e-03]\n",
      " [-4.19342257e-02]\n",
      " [-6.10959954e-02]\n",
      " [-5.66699470e-02]\n",
      " [ 5.31111684e-02]\n",
      " [-1.71985045e-02]\n",
      " [ 2.58767681e-02]\n",
      " [ 3.31592045e-02]\n",
      " [ 7.21153187e-03]\n",
      " [ 1.71955198e-02]\n",
      " [-8.03673482e-03]\n",
      " [-4.97612317e-02]\n",
      " [-2.77110499e-02]\n",
      " [-2.39683954e-02]\n",
      " [ 3.28335196e-02]\n",
      " [ 1.17764046e-02]\n",
      " [ 3.90748531e-02]\n",
      " [ 3.35169135e-02]\n",
      " [-1.78498743e-02]\n",
      " [-5.73533409e-02]\n",
      " [-1.83784318e-02]\n",
      " [ 1.78049762e-01]\n",
      " [ 2.77240773e-02]\n",
      " [ 9.26171362e-03]\n",
      " [-3.53191712e-02]\n",
      " [-2.10799833e-02]\n",
      " [-2.85332682e-02]\n",
      " [-1.07542984e-02]\n",
      " [-7.50255104e-02]\n",
      " [-9.37149855e-03]\n",
      " [-4.80662577e-03]\n",
      " [-2.66699470e-02]\n",
      " [-1.27724561e-02]\n",
      " [ 6.56578835e-02]\n",
      " [-4.96146220e-03]\n",
      " [-1.76337725e-03]\n",
      " [-2.34718620e-02]\n",
      " [-1.27011644e-01]\n",
      " [ 1.41869564e-03]\n",
      " [ 2.70566954e-02]\n",
      " [-4.96146220e-03]\n",
      " [ 8.09541864e-02]\n",
      " [-7.77110499e-02]\n",
      " [ 6.41362593e-02]\n",
      " [ 1.36557379e-02]\n",
      " [-4.59865531e-02]\n",
      " [ 1.75852529e-02]\n",
      " [-5.29433046e-02]\n",
      " [-4.37815349e-02]\n",
      " [ 2.72115319e-02]\n",
      " [-3.61574016e-02]\n",
      " [-2.00548925e-02]\n",
      " [ 1.67553229e-01]\n",
      " [ 3.51691354e-03]\n",
      " [-4.63282500e-02]\n",
      " [-1.10959954e-02]\n",
      " [-3.80207228e-02]\n",
      " [ 5.56899076e-02]\n",
      " [ 2.44939683e-02]\n",
      " [ 2.22729380e-02]\n",
      " [-3.24307591e-02]\n",
      " [ 1.47366368e-01]\n",
      " [ 1.71955198e-02]\n",
      " [-9.50094984e-02]\n",
      " [ 1.71795078e-02]\n",
      " [-5.44969529e-02]\n",
      " [-2.83944438e-02]\n",
      " [-1.26336317e-02]\n",
      " [-6.29433046e-02]\n",
      " [ 1.43470769e-03]\n",
      " [ 1.89040046e-02]\n",
      " [ 3.36557379e-02]\n",
      " [-3.24787953e-02]\n",
      " [-3.59865531e-02]\n",
      " [-5.30315916e-03]\n",
      " [-3.21210863e-02]\n",
      " [ 9.50065137e-02]\n",
      " [-1.29745220e-01]\n",
      " [-3.70116439e-02]\n",
      " [ 8.97582470e-02]\n",
      " [-6.83784318e-02]\n",
      " [ 5.75532288e-02]\n",
      " [-2.04286135e-02]\n",
      " [ 5.51933742e-02]\n",
      " [-1.05674379e-02]\n",
      " [-3.27724561e-02]\n",
      " [ 2.32980289e-02]\n",
      " [ 2.94005380e-02]\n",
      " [-5.51483227e-02]\n",
      " [ 2.21181016e-02]\n",
      " [-1.56608682e-02]\n",
      " [ 1.39229690e-01]\n",
      " [ 8.90748531e-02]\n",
      " [-3.60025651e-02]\n",
      " [-1.63442621e-02]\n",
      " [-9.34718620e-02]\n",
      " [ 6.89040046e-02]\n",
      " [-4.14376923e-02]\n",
      " [-5.63442621e-02]\n",
      " [-2.38295711e-02]\n",
      " [ 1.01621568e-01]\n",
      " [ 5.75532288e-02]\n",
      " [-7.05674379e-02]\n",
      " [ 1.21181016e-02]\n",
      " [-4.75402014e-02]\n",
      " [-5.64485611e-03]\n",
      " [-6.01857718e-03]\n",
      " [ 2.26466591e-02]\n",
      " [ 6.24597986e-02]\n",
      " [-1.29264698e-01]\n",
      " [-9.70436680e-02]\n",
      " [-3.53191712e-02]\n",
      " [ 1.11434708e-01]\n",
      " [ 1.07833379e-02]\n",
      " [-8.03673482e-03]\n",
      " [-2.92166621e-02]\n",
      " [-3.44649288e-02]\n",
      " [-2.71985045e-02]\n",
      " [-2.10959954e-02]\n",
      " [ 4.87331561e-02]\n",
      " [ 1.28175076e-02]\n",
      " [ 3.26600481e-03]\n",
      " [ 1.58049762e-01]\n",
      " [-6.78818984e-02]\n",
      " [-9.16085408e-02]\n",
      " [-4.82235954e-02]\n",
      " [-7.67902581e-03]\n",
      " [-2.21370983e-02]\n",
      " [-2.22919347e-02]\n",
      " [ 4.21181016e-02]\n",
      " [ 8.06577427e-03]\n",
      " [ 1.08049762e-01]\n",
      " [ 4.78629017e-02]\n",
      " [ 5.38023476e-03]\n",
      " [-2.97131955e-02]\n",
      " [ 3.17521658e-03]\n",
      " [-3.88749652e-02]\n",
      " [-4.83784318e-02]\n",
      " [ 2.30043681e-02]\n",
      " [-1.90618257e-02]\n",
      " [ 7.29563320e-02]\n",
      " [ 1.33140410e-02]\n",
      " [-4.03965894e-02]\n",
      " [-4.49695292e-03]\n",
      " [ 7.48356652e-02]\n",
      " [ 4.92617136e-02]\n",
      " [-8.82235954e-02]\n",
      " [-5.65311226e-02]\n",
      " [-3.87201287e-02]\n",
      " [ 1.78204599e-01]\n",
      " [ 1.20254780e-01]\n",
      " [ 1.54819653e-01]\n",
      " [-1.97131955e-02]\n",
      " [-4.67019711e-02]\n",
      " [ 6.33300530e-02]\n",
      " [ 3.00999440e-02]\n",
      " [-3.97292076e-02]\n",
      " [-2.80367348e-02]\n",
      " [-7.27884681e-02]\n",
      " [-4.85652923e-02]\n",
      " [ 8.58607561e-02]\n",
      " [ 7.51773622e-02]\n",
      " [ 1.35169135e-02]\n",
      " [ 2.79269499e-02]\n",
      " [ 9.58739853e-03]\n",
      " [-7.00869166e-02]\n",
      " [-2.60025651e-02]\n",
      " [-3.04126015e-02]\n",
      " [-2.48386499e-02]\n",
      " [-3.51643348e-02]\n",
      " [-1.94035227e-02]\n",
      " [ 4.49396826e-03]\n",
      " [ 1.77561014e-02]\n",
      " [-3.76790258e-02]\n",
      " [-3.15765167e-02]\n",
      " [-6.60025651e-02]\n",
      " [ 1.00839319e-02]\n",
      " [-2.83784318e-02]\n",
      " [-1.00599462e-01]\n",
      " [ 1.31189537e-03]\n",
      " [ 1.58204599e-01]\n",
      " [-6.44649288e-02]\n",
      " [-8.80527469e-02]\n",
      " [ 6.82366227e-02]\n",
      " [-1.65863741e-01]\n",
      " [ 2.09221623e-02]\n",
      " [ 6.59995805e-02]\n",
      " [-3.31301651e-02]\n",
      " [-4.24467712e-02]\n",
      " [ 1.51418696e-01]\n",
      " [ 1.70727075e-02]\n",
      " [ 1.79074853e-01]\n",
      " [ 7.60316046e-02]\n",
      " [ 7.66829744e-02]\n",
      " [-1.39683954e-02]\n",
      " [ 8.94005380e-02]\n",
      " [-5.83624197e-02]\n",
      " [-1.43421165e-02]\n",
      " [-6.31301651e-02]\n",
      " [-9.22919347e-02]\n",
      " [ 6.93845259e-02]\n",
      " [-7.38295711e-02]\n",
      " [-8.87496516e-03]\n",
      " [-4.38295711e-02]\n",
      " [-1.53672074e-02]\n",
      " [ 2.00999440e-02]\n",
      " [-6.38135590e-02]\n",
      " [ 4.12798713e-02]\n",
      " [-7.22599106e-02]\n",
      " [ 9.12798713e-02]\n",
      " [ 2.58927802e-02]\n",
      " [-7.16085408e-02]\n",
      " [-1.78498743e-02]\n",
      " [-2.82075833e-02]\n",
      " [-5.68407955e-02]\n",
      " [-4.29408033e-03]\n",
      " [ 4.72275439e-02]\n",
      " [-5.14832273e-03]\n",
      " [-1.93714985e-02]\n",
      " [ 9.60316046e-02]\n",
      " [ 7.29563320e-02]\n",
      " [ 3.15920453e-03]\n",
      " [-6.63282500e-02]\n",
      " [ 4.58607561e-02]\n",
      " [-1.07998334e-03]\n",
      " [-3.62669847e-03]\n",
      " [-5.21050742e-02]\n",
      " [ 1.48516773e-02]\n",
      " [ 3.60316046e-02]\n",
      " [ 3.15920453e-03]\n",
      " [-5.55060317e-02]\n",
      " [ 5.89200167e-02]\n",
      " [-3.33303767e-03]\n",
      " [ 1.58920017e-01]\n",
      " [-8.58637407e-02]\n",
      " [ 3.56899076e-02]\n",
      " [-2.76790258e-02]\n",
      " [ 7.21153187e-03]\n",
      " [-7.16648037e-03]\n",
      " [ 2.46808288e-02]\n",
      " [-3.36106864e-02]\n",
      " [-1.18906989e-01]\n",
      " [-6.53191712e-02]\n",
      " [ 2.63064704e-03]\n",
      " [ 6.63412774e-02]\n",
      " [-2.14056682e-02]\n",
      " [-2.61894257e-02]\n",
      " [-6.84079547e-03]\n",
      " [-4.15525596e-03]\n",
      " [ 8.42348328e-03]\n",
      " [ 9.70198409e-04]\n",
      " [ 4.32311978e-03]\n",
      " [ 4.12638592e-02]\n",
      " [ 6.19632652e-02]\n",
      " [ 3.34848894e-02]\n",
      " [ 1.92617136e-02]\n",
      " [ 2.79416550e-01]\n",
      " [-1.13130165e-01]\n",
      " [-6.68568075e-02]\n",
      " [ 1.10783338e-01]\n",
      " [ 2.39814228e-02]\n",
      " [-6.14216803e-02]\n",
      " [ 4.75212047e-02]\n",
      " [ 6.31752166e-02]\n",
      " [-2.27724561e-02]]\n"
     ]
    }
   ],
   "source": [
    "print(y_pred-y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Predicted Value of chances of admission MINUS Actual Values "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x22630fec8c8>]"
      ]
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x_test, y_test, color='gray')\n",
    "plt.plot(x_test, y_pred, color='red')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Absolute Error: 0.04771304427731384\n",
      "Mean Squared Error: 0.004282983356938766\n",
      "Root Mean Squared Error: 0.06544450593394961\n"
     ]
    }
   ],
   "source": [
    "print('Mean Absolute Error:', metrics.mean_absolute_error(y_test, y_pred))  \n",
    "print('Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))  \n",
    "print('Root Mean Squared Error:', np.sqrt(metrics.mean_squared_error(y_test, y_pred)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
